@inject AuthenticationStateProvider authStateProvider
@using Front_End.Components.Pages.Misc
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@inject IJSRuntime js
@rendermode InteractiveServer


@page "/"

<CascadingAuthenticationState>

<AuthorizeView>
    <Authorized>
    <div class="flex h-screen flex-col gap-2 bg-black">
        <NavBar />
      
       
        <div class="flex h-3/4 flex-col items-center justify-center gap-3 text-4xl font-bold text-white">
            <h1>DVLD</h1>
            <h1>Driving License Project</h1>
        </div>
     
    </div>
    </Authorized>
    <NotAuthorized>
       <NotAuthorizedPage PageName="Home"/>
    </NotAuthorized>
</AuthorizeView>


</CascadingAuthenticationState>


@code
{

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private AuthenticationState authenticationState => authenticationStateTask?.Result;


}

